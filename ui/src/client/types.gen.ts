// This file is auto-generated by @hey-api/openapi-ts

export type HTTPValidationError = {
    detail?: Array<ValidationError>;
};

export type StatusEnum = 'todo' | 'comp' | 'in_prog';

export type TCategory = {
    id?: (string | null);
    name: string;
    tasks?: Array<TTask>;
};

export type TTask = {
    id: (string | null);
    name: string;
    status: StatusEnum;
    category_id?: (string | null);
    category?: (TCategory | null);
};

export type ValidationError = {
    loc: Array<(string | number)>;
    msg: string;
    type: string;
};

export type GetTasksData = {
    query?: {
        limit?: number;
        offset?: number;
    };
};

export type GetTasksResponse = (Array<TTask>);

export type GetTasksError = (HTTPValidationError);

export type CreateTaskData = {
    body: TTask;
};

export type CreateTaskResponse = (TTask);

export type CreateTaskError = (HTTPValidationError);

export type GetTaskByStatusData = {
    path: {
        status: StatusEnum;
    };
};

export type GetTaskByStatusResponse = (Array<TTask>);

export type GetTaskByStatusError = (HTTPValidationError);

export type GetTaskData = {
    path: {
        task_id: string;
    };
};

export type GetTaskResponse = (TTask);

export type GetTaskError = (HTTPValidationError);

export type DeleteTaskData = {
    path: {
        task_id: string;
    };
};

export type DeleteTaskResponse = (unknown);

export type DeleteTaskError = (HTTPValidationError);

export type UpdateTaskData = {
    body: TTask;
    path: {
        task_id: string;
    };
};

export type UpdateTaskResponse = (TTask);

export type UpdateTaskError = (HTTPValidationError);

export type GetCategoriesData = {
    query?: {
        limit?: number;
        offset?: number;
    };
};

export type GetCategoriesResponse = (Array<TCategory>);

export type GetCategoriesError = (HTTPValidationError);

export type CreateCategoryData = {
    body: TCategory;
};

export type CreateCategoryResponse = (TCategory);

export type CreateCategoryError = (HTTPValidationError);

export type GetCategoryData = {
    path: {
        category_id: string;
    };
};

export type GetCategoryResponse = (TCategory);

export type GetCategoryError = (HTTPValidationError);

export type DeleteCategoryData = {
    path: {
        category_id: string;
    };
};

export type DeleteCategoryResponse = (unknown);

export type DeleteCategoryError = (HTTPValidationError);

export type UpdateCategoryData = {
    body: TCategory;
    path: {
        category_id: string;
    };
};

export type UpdateCategoryResponse = (TCategory);

export type UpdateCategoryError = (HTTPValidationError);