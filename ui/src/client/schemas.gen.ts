// This file is auto-generated by @hey-api/openapi-ts

export const HTTPValidationErrorSchema = {
    properties: {
        detail: {
            items: {
                '$ref': '#/components/schemas/ValidationError'
            },
            type: 'array',
            title: 'Detail'
        }
    },
    type: 'object',
    title: 'HTTPValidationError'
} as const;

export const StatusEnumSchema = {
    type: 'string',
    enum: ['todo', 'comp', 'in_prog'],
    title: 'StatusEnum'
} as const;

export const TCategorySchema = {
    properties: {
        id: {
            anyOf: [
                {
                    type: 'string',
                    format: 'uuid'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Id'
        },
        name: {
            type: 'string',
            title: 'Name'
        },
        tasks: {
            items: {
                '$ref': '#/components/schemas/TTask'
            },
            type: 'array',
            title: 'Tasks'
        }
    },
    type: 'object',
    required: ['name'],
    title: 'TCategory'
} as const;

export const TTaskSchema = {
    properties: {
        id: {
            anyOf: [
                {
                    type: 'string',
                    format: 'uuid'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Id'
        },
        name: {
            type: 'string',
            title: 'Name'
        },
        status: {
            '$ref': '#/components/schemas/StatusEnum'
        },
        category_id: {
            anyOf: [
                {
                    type: 'string',
                    format: 'uuid'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Category Id'
        },
        category: {
            anyOf: [
                {
                    '$ref': '#/components/schemas/TCategory'
                },
                {
                    type: 'null'
                }
            ]
        }
    },
    type: 'object',
    required: ['id', 'name', 'status'],
    title: 'TTask'
} as const;

export const ValidationErrorSchema = {
    properties: {
        loc: {
            items: {
                anyOf: [
                    {
                        type: 'string'
                    },
                    {
                        type: 'integer'
                    }
                ]
            },
            type: 'array',
            title: 'Location'
        },
        msg: {
            type: 'string',
            title: 'Message'
        },
        type: {
            type: 'string',
            title: 'Error Type'
        }
    },
    type: 'object',
    required: ['loc', 'msg', 'type'],
    title: 'ValidationError'
} as const;